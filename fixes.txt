- User evaluation of generated events. [3]
- Add more config. Ex.: max batch size. [1]
- Add failsafes. [3]
- Add batch querying for handling big narrative spaces (sets of relevant entities). [2]
- Add option to auto detect time outliers by calculating the mean time variance and pruning all events that have a time variance from the previous event greater than the mean. [1]
- More complex mechanism for main entity selection. Breaking topic into tokens. Searching for substrings. [2]
- Support for more languages. [1]
- String matching based on predicate descriptions. [1]
- Prompt as topic. [2]
- Store property data in graph's data storage.
- Add an option to save output to a file.
- Add context specific classification and conflict resolution.
- Code cleanup.
- Documentation.

Validation options:
- Information loss
- Essay based
- Anotated benchmark datasets
- Human evaluation

Advanced:

- Explore paths that show some relevancy to the topic.
- Using embedding methods for node classification.
- Using embedding methods for link prediction.




NEW APPROACH:

Select entities and properties based on their relevance to the topic.

SUGGESTION1:
- Extract from Wikidata random RDF triples linked to random entities.
- Attribute a label to each RDF triple-entity pair as either being relevant or not.
- Extract all relevant features and build the dataset.
- Train a machine learning model to predict label.
- Acquire all RDF triples linked to the main entity up until a certain depth.
- Classify each triple, using previous model, as either being relevant or not to the topic.

SUGGESTION2:
- Extract all data linked to the main entity up until a certain depth.
- Convert extracted data to a graph.
- Find all relevant paths in the graph.
  All relevant paths start from the main entity and propagate through the graph until one of the 2 stopping conditions in met:	
  - We reached a node with no outgoing links.
  - Current path relevancy score is below a certain threshold.
- In case of path intersections, chose the path that leads to the highest relevancy score.
- Unite links with the same origin that have high similarity and merge respective paths.
- The end result should be a set of paths in the graph, all starting at the main node and without any intersections.
- The resulting graph is a narrative graph.
- Each path in the narrative graph represents a story.
- Convert paths back to RDF format.
- Proceede as normal from here.

APPROACH 2:

Create generative AI that generates narratives based on extracted data.